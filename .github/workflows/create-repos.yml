name: Create Repositories
run-name: Create Repositories
on: push

jobs:
  Treat-JSON:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up JQ
        run: sudo apt-get install jq

      - name: Get info of the repositories
        run: |
          JSON="./.github/example-files/repo-example.json"
          REPOSITORIES_NAMES=($(cat $JSON | jq -r '.repositories[].repo_name'))
          echo "REPOSITORIES_NAMES=${REPOSITORIES_NAMES[*]}" >> $GITHUB_ENV

          REPOSITORY_ENVS=($(cat $JSON | jq -r '.repositories[].environments'))
          echo "REPOSITORY_ENVS=${REPOSITORY_ENVS[*]}" >> $GITHUB_ENV

          REPOSITORY_VARS=($(cat $JSON | jq -r '.repositories[].repo_variables'))
          echo "REPOSITORY_VARS=${REPOSITORY_VARS[*]}" >> $GITHUB_ENV

          REPOSITORY_SECRETS=($(cat $JSON | jq -r '.repositories[].repo_secrets'))
          echo "REPOSITORY_SECRETS=${REPOSITORY_SECRETS[*]}" >> $GITHUB_ENV

      - name: Create repositories
        run: |
          for repository_name in $REPOSITORIES_NAMES; do
            echo "Creating repository: $repository_name"
            curl -v -L \
              -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: token ${{ secrets.personal_token }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/orgs/my-org-alex/repos \
              -d "{\"name\":\"$repository_name\",\"description\":\"This is your first repository\",\"private\":false,\"has_issues\":false,\"has_projects\":false,\"has_wiki\":false}"
            
            repo_index=$(jq -r --arg repo_name "$repository_name" '.repositories | map(.repo_name == $repo_name) | index(true)' $JSON)
            echo "Repository index for $repository_name: $repo_index"
            if [ "$repo_index" == "null" ]; then
              echo "Error: Repository index not found for $repository_name. Check JSON file."
              exit 1
            fi

            # for repo_env_info in $(jq -c ".repositories[$repo_index].environments[]" $JSON); do
            #   env_name=$(echo "$repo_env_info" | jq -r '.env_name')
            #   echo "Creating environment: $env_name"
            #   production=$(echo "$repo_env_info" | jq -r '.production')
            #   echo "Is prod: $production"

            #   curl -X POST \
            #   -H "Accept: application/vnd.github.v3+json" \
            #   -H "Authorization: token ${{ secrets.personal_token }}" \
            #   "https://api.github.com/repos/my-org-alex/$repository_name/environments" \
            #   -d "{\"name\":\"$env_name\",\"auto_merge\":false,\"production\":$production}"  
            # done

            # for repo_var_info in $(jq -c ".repositories[$repo_index].repo_variables[]" $JSON); do
            #   repo_var_name=$(echo "$repo_var_info" | jq -r '.repo_var_name')
            #   value=$(echo "$repo_var_info" | jq -r '.value')

            #   curl -X POST \
            #   -H "Accept: application/vnd.github.v3+json" \
            #   -H "Authorization: token ${{ secrets.personal_token }}" \
            #   "https://api.github.com/repos/my-org-alex/$repository_name/actions/secrets/$repo_var_name" \
            #   -d "{\"value\":\"$value\"}"
            # done

            # for repo_secret_info in $(jq -c ".repositories[$repo_index].repo_secrets[]" $JSON); do
            #   repo_secret_name=$(echo "$repo_secret_info" | jq -r '.repo_secret_name')
            #   value=$(echo "$repo_secret_info" | jq -r '.value')

            #   curl -X POST \
            #   -H "Accept: application/vnd.github.v3+json" \
            #   -H "Authorization: token ${{ secrets.personal_token }}" \
            #   "https://api.github.com/repos/my-org-alex/$repository_name/actions/secrets/$repo_secret_name" \
            #   -d "{\"encrypted_value\":\"$(echo -n $value | base64)\",\"key_id\":null}"
            # done
          done